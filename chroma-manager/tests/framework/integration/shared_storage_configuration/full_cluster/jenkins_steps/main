#!/bin/bash -ex

make substs
. chroma-manager/tests/framework/utils/defaults.sh
. chroma-manager/tests/framework/utils/selective_auto_pass.sh
. chroma-manager/tests/framework/utils/cleanup.sh

set_defaults false
check_for_autopass

 if $JENKINS; then
    CHROMA_DIR="$PWD"
fi
export CLUSTER_CONFIG_TEMPLATE=${CLUSTER_CONFIG_TEMPLATE:-"$CHROMA_DIR/chroma-manager/tests/framework/integration/shared_storage_configuration/full_cluster/shared_storage_configuration_cluster_cfg.json"}

cd $WORKSPACE
if [ -n "$RELEASE_ARCHIVE" ]; then
    curl -L -f -O "${RELEASE_ARCHIVE_PATH:-https://github.com/intel-hpdd/intel-manager-for-lustre/releases/download}/$RELEASE_ARCHIVE"
elif $JENKINS; then
    curl -f -k -O "$JOB_URL/$ARCHIVE_NAME"
fi

got_aborted=false
# Gather logs from nodes and release the cluster at exit
trap "set +e; cleanup" EXIT

trap "set -x
got_aborted=true
echo \"Got SIGTERM\"
ps axf
exit 1" TERM

$CHROMA_DIR/chroma-manager/tests/framework/utils/provisioner_interface/provision_cluster

# see if this cures the 401 errors from jenkins
eval $(python $CHROMA_DIR/chroma-manager/tests/utils/json_cfg2sh.py "$CLUSTER_CONFIG")

echo "Beginning automated test run..."
export MEASURE_COVERAGE=$MEASURE_COVERAGE
$CHROMA_DIR/chroma-manager/tests/framework/integration/shared_storage_configuration/full_cluster/cluster_setup
$CHROMA_DIR/chroma-manager/tests/framework/integration/shared_storage_configuration/full_cluster/run_tests
echo "Automated test run complete."

# Combine coverage reports from the different nodes.
if $MEASURE_COVERAGE; then
  ls .coverage*
  # https://github.com/pypa/virtualenv/issues/355
  python_version=$(python -c 'import platform; print ".".join(platform.python_version_tuple()[0:2])')
  echo "
[paths]
source1 =
    $WORKSPACE/$CHROMA_DIR/chroma-manager/
    /usr/share/chroma-manager/
source2 =
    $WORKSPACE/$CHROMA_DIR/chroma-agent/chroma_agent/
    /usr/lib/python$python_version/site-packages/chroma_agent/

[report]
include =
    $WORKSPACE/$CHROMA_DIR/*
omit =
    *junk.py
    */tests/*
" > .coveragerc

  coverage combine
  coverage report -m
  coverage xml --ignore-errors
fi
